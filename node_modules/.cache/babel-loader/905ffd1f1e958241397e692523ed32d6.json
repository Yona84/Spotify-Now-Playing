{"ast":null,"code":"var _jsxFileName = \"/Users/yonatanronen/dev/spotify/src/components/Player.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport { LinearProgress } from '@material-ui/core';\nconst propTypes = {\n  token: PropTypes.string,\n  setPlayerData: PropTypes.func,\n  item: PropTypes.object,\n  progress: PropTypes.number\n};\nconst PLAYER_URL = 'https://api.spotify.com/v1/me/player';\n\nconst Player = ({\n  token = '',\n  setPlayerData,\n  item,\n  progress\n}) => {\n  const getData = async () => {\n    const rawResponse = await fetch(`${PLAYER_URL}`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    if (rawResponse.status === 200) {\n      const content = await rawResponse.json();\n      setPlayerData(content);\n    }\n\n    ;\n  };\n\n  React.useEffect(() => {\n    getData();\n  }, [token]); // console.log('progress * 100 / item.duration_ms', progress * 100 / item.duration_ms);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.img,\n    src: item.album && item.album.images && item.album.images[0].url,\n    alt: \"playing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(LinearProgress, {\n    value: 0.2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst styles = {\n  root: css({}),\n  img: css({\n    width: 200,\n    height: 200,\n    borderRadius: 40\n  })\n};\nPlayer.propTypes = propTypes;\nexport default Player;","map":{"version":3,"sources":["/Users/yonatanronen/dev/spotify/src/components/Player.jsx"],"names":["React","PropTypes","css","LinearProgress","propTypes","token","string","setPlayerData","func","item","object","progress","number","PLAYER_URL","Player","getData","rawResponse","fetch","method","headers","Authorization","status","content","json","useEffect","styles","root","img","album","images","url","width","height","borderRadius"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAEJ,SAAS,CAACK,MADD;AAEhBC,EAAAA,aAAa,EAAEN,SAAS,CAACO,IAFT;AAGhBC,EAAAA,IAAI,EAAER,SAAS,CAACS,MAHA;AAIhBC,EAAAA,QAAQ,EAAEV,SAAS,CAACW;AAJJ,CAAlB;AAOA,MAAMC,UAAU,GAAG,sCAAnB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAET,EAAAA,KAAK,GAAG,EAAV;AAAcE,EAAAA,aAAd;AAA6BE,EAAAA,IAA7B;AAAmCE,EAAAA;AAAnC,CAAD,KAAmD;AAEhE,QAAMI,OAAO,GAAG,YAAY;AAC1B,UAAMC,WAAW,GAAG,MAAMC,KAAK,CAAE,GAAEJ,UAAW,EAAf,EAAkB;AAC/CK,MAAAA,MAAM,EAAE,KADuC;AAE/CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASf,KAAM;AADxB;AAFsC,KAAlB,CAA/B;;AAMA,QAAIW,WAAW,CAACK,MAAZ,KAAuB,GAA3B,EAAgC;AAChC,YAAMC,OAAO,GAAG,MAAMN,WAAW,CAACO,IAAZ,EAAtB;AACAhB,MAAAA,aAAa,CAACe,OAAD,CAAb;AACD;;AAAA;AACF,GAXC;;AAaFtB,EAAAA,KAAK,CAACwB,SAAN,CAAgB,MAAM;AACpBT,IAAAA,OAAO;AAER,GAHD,EAGG,CAAEV,KAAF,CAHH,EAfkE,CAoBlE;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEoB,MAAM,CAACC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAED,MAAM,CAACE,GAAvB;AAA4B,IAAA,GAAG,EAAElB,IAAI,CAACmB,KAAL,IAAcnB,IAAI,CAACmB,KAAL,CAAWC,MAAzB,IAAmCpB,IAAI,CAACmB,KAAL,CAAWC,MAAX,CAAmB,CAAnB,EAAuBC,GAA3F;AAAgG,IAAA,GAAG,EAAC,SAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAE,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMC,CA5BD;;AA+BA,MAAML,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAExB,GAAG,CAAC,EAAD,CADI;AAEbyB,EAAAA,GAAG,EAAEzB,GAAG,CAAC;AACP6B,IAAAA,KAAK,EAAE,GADA;AAEPC,IAAAA,MAAM,EAAE,GAFD;AAGPC,IAAAA,YAAY,EAAE;AAHP,GAAD;AAFK,CAAf;AASAnB,MAAM,CAACV,SAAP,GAAmBA,SAAnB;AAEA,eAAeU,MAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport { LinearProgress } from '@material-ui/core';\n\nconst propTypes = {\n  token: PropTypes.string,\n  setPlayerData: PropTypes.func,\n  item: PropTypes.object,\n  progress: PropTypes.number\n};\n\nconst PLAYER_URL = 'https://api.spotify.com/v1/me/player';\n\nconst Player = ({ token = '', setPlayerData, item, progress }) => {\n\n  const getData = async () => {\n    const rawResponse = await fetch(`${PLAYER_URL}`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (rawResponse.status === 200) {\n    const content = await rawResponse.json();\n    setPlayerData(content);\n  };\n};\n\nReact.useEffect(() => {\n  getData();\n\n}, [ token ]);\n\n// console.log('progress * 100 / item.duration_ms', progress * 100 / item.duration_ms);\n\nreturn (\n  <div className={styles.root}>\n    <img className={styles.img} src={item.album && item.album.images && item.album.images[ 0 ].url} alt='playing'/>\n    <LinearProgress value={0.2}/>\n  </div>\n);\n}\n;\n\nconst styles = {\n  root: css({}),\n  img: css({\n    width: 200,\n    height: 200,\n    borderRadius: 40,\n  })\n};\n\nPlayer.propTypes = propTypes;\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}