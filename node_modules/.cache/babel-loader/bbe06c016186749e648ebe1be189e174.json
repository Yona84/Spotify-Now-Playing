{"ast":null,"code":"var _jsxFileName = \"/Users/yonatanronen/dev/spotify/src/App.js\";\nimport React from 'react';\nimport { css } from 'emotion';\nexport const authEndpoint = 'https://accounts.spotify.com/authorize?'; // Replace with your app's client ID, redirect URI and desired scopes\n\nconst clientId = 'f8a918d65fbf4aab85e9afc90e65816f';\nconst redirectUri = 'http://localhost:3000/';\nconst scopes = ['user-read-currently-playing', 'user-read-playback-state']; // Get the hash of the url\n\nconst hash = window.location.hash.substring(1).split('&').reduce(function (initial, item) {\n  if (item) {\n    var parts = item.split('=');\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n  }\n\n  return initial;\n}, {});\nwindow.location.hash = '';\n\nconst App = () => {\n  const [token, setToken] = React.useState('');\n  React.useEffect(() => {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      setToken(_token);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.app,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, !token && /*#__PURE__*/React.createElement(\"a\", {\n    className: styles.spotifyButton,\n    href: `${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Login to Spotify\"), token && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \" Player \"));\n};\n\nconst styles = {\n  app: css({\n    minHeight: '100vh',\n    minWidth: '100vw',\n    backgroundImage: 'linear-gradient(to right, hsl(214, 47%, 23%) ,hsl(237, 49%, 15%))',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }),\n  spotifyButton: css({\n    width: 200,\n    height: 40,\n    color: 'white',\n    backgroundColor: 'black',\n    borderRadius: 40,\n    padding: 20,\n    textTransform: 'none'\n  })\n};\nexport default App;","map":{"version":3,"sources":["/Users/yonatanronen/dev/spotify/src/App.js"],"names":["React","css","authEndpoint","clientId","redirectUri","scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","App","token","setToken","useState","useEffect","_token","access_token","styles","app","spotifyButton","join","minHeight","minWidth","backgroundImage","display","justifyContent","alignItems","width","height","color","backgroundColor","borderRadius","padding","textTransform"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AAEA,OAAO,MAAMC,YAAY,GAAG,yCAArB,C,CAEP;;AAEA,MAAMC,QAAQ,GAAG,kCAAjB;AACA,MAAMC,WAAW,GAAG,wBAApB;AACA,MAAMC,MAAM,GAAG,CACb,6BADa,EAEb,0BAFa,CAAf,C,CAKA;;AACA,MAAMC,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CACVG,SADU,CACA,CADA,EAEVC,KAFU,CAEJ,GAFI,EAGVC,MAHU,CAGH,UAAUC,OAAV,EAAmBC,IAAnB,EAAyB;AAC/B,MAAIA,IAAJ,EAAU;AACR,QAAIC,KAAK,GAAGD,IAAI,CAACH,KAAL,CAAW,GAAX,CAAZ;AACAE,IAAAA,OAAO,CAAEE,KAAK,CAAE,CAAF,CAAP,CAAP,GAAwBC,kBAAkB,CAACD,KAAK,CAAE,CAAF,CAAN,CAA1C;AACD;;AACD,SAAOF,OAAP;AACD,CATU,EASR,EATQ,CAAb;AAUAL,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;;AAEA,MAAMU,GAAG,GAAG,MAAM;AAEhB,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBlB,KAAK,CAACmB,QAAN,CAAe,EAAf,CAA5B;AAEAnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB;AACA,QAAIC,MAAM,GAAGf,IAAI,CAACgB,YAAlB;;AACA,QAAID,MAAJ,EAAY;AACV;AACAH,MAAAA,QAAQ,CAACG,MAAD,CAAR;AACD;AACF,GAPD,EAOG,EAPH;AASA,sBACE;AAAK,IAAA,SAAS,EAAEE,MAAM,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACP,KAAD,iBACC;AACE,IAAA,SAAS,EAAEM,MAAM,CAACE,aADpB;AAEE,IAAA,IAAI,EAAG,GAAEvB,YAAa,aAAYC,QAAS,iBAAgBC,WAAY,UAASC,MAAM,CAACqB,IAAP,CAAY,KAAZ,CAAmB,uCAFrG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAUIT,KAAK,iBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,CADF;AAgBD,CA7BD;;AA+BA,MAAMM,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAEvB,GAAG,CAAC;AACP0B,IAAAA,SAAS,EAAE,OADJ;AAEPC,IAAAA,QAAQ,EAAE,OAFH;AAGPC,IAAAA,eAAe,EAAE,mEAHV;AAIPC,IAAAA,OAAO,EAAE,MAJF;AAKPC,IAAAA,cAAc,EAAE,QALT;AAMPC,IAAAA,UAAU,EAAE;AANL,GAAD,CADK;AASbP,EAAAA,aAAa,EAAExB,GAAG,CAAC;AACjBgC,IAAAA,KAAK,EAAE,GADU;AAEjBC,IAAAA,MAAM,EAAE,EAFS;AAGjBC,IAAAA,KAAK,EAAE,OAHU;AAIjBC,IAAAA,eAAe,EAAE,OAJA;AAKjBC,IAAAA,YAAY,EAAE,EALG;AAMjBC,IAAAA,OAAO,EAAE,EANQ;AAOjBC,IAAAA,aAAa,EAAE;AAPE,GAAD;AATL,CAAf;AAoBA,eAAevB,GAAf","sourcesContent":["import React from 'react';\nimport { css } from 'emotion';\n\nexport const authEndpoint = 'https://accounts.spotify.com/authorize?';\n\n// Replace with your app's client ID, redirect URI and desired scopes\n\nconst clientId = 'f8a918d65fbf4aab85e9afc90e65816f';\nconst redirectUri = 'http://localhost:3000/';\nconst scopes = [\n  'user-read-currently-playing',\n  'user-read-playback-state',\n];\n\n// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split('&')\n  .reduce(function (initial, item) {\n    if (item) {\n      var parts = item.split('=');\n      initial[ parts[ 0 ] ] = decodeURIComponent(parts[ 1 ]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = '';\n\nconst App = () => {\n\n  const [ token, setToken ] = React.useState('');\n\n  React.useEffect(() => {\n    // Set token\n    let _token = hash.access_token;\n    if (_token) {\n      // Set token\n      setToken(_token);\n    }\n  }, []);\n\n  return (\n    <div className={styles.app}>\n      {!token && (\n        <a\n          className={styles.spotifyButton}\n          href={`${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`}\n        >\n          Login to Spotify\n        </a>\n      )}\n      {\n        token &&\n        <div> Player </div>\n      }\n    </div>\n  );\n};\n\nconst styles = {\n  app: css({\n    minHeight: '100vh',\n    minWidth: '100vw',\n    backgroundImage: 'linear-gradient(to right, hsl(214, 47%, 23%) ,hsl(237, 49%, 15%))',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }),\n  spotifyButton: css({\n    width: 200,\n    height: 40,\n    color: 'white',\n    backgroundColor: 'black',\n    borderRadius: 40,\n    padding: 20,\n    textTransform: 'none'\n  })\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}